# 指定 Alpine 版本为 3.13
ARG ALPINE_VERSION=3.13
FROM alpine:${ALPINE_VERSION}

# 添加维护者和描述信息
LABEL Maintainer="Trainliang <trainliang@gmail.com>"
LABEL Description="Lightweight container with Nginx 1.26 & PHP 7 based on Alpine Linux."

# 设置工作目录
WORKDIR /var/www/html

# 更新包索引并安装所需的软件包
RUN apk update && apk add --no-cache \
    curl \
    nginx \
    php7 \
    php7-zip \
    php7-pdo_mysql \
    php7-pdo_pgsql \
    php7-mongodb \
    php7-pecl-memcache \
    php7-pecl-memcached \
    php7-bcmath \
    php7-redis \
    php7-ctype \
    php7-curl \
    php7-dom \
    php7-fileinfo \
    php7-fpm \
    php7-pdo \
    php7-gd \
    php7-intl \
    php7-mbstring \
    php7-mysqli \
    php7-opcache \
    php7-openssl \
    php7-phar \
    php7-session \
    php7-tokenizer \
    php7-xml \
    php7-xmlreader \
    php7-xmlwriter \
    supervisor

# 复制 Nginx 配置文件
COPY conf/nginx.conf /etc/nginx/nginx.conf
COPY conf/conf-d /etc/nginx/conf.d/

# 配置 PHP-FPM
ENV PHP_INI_DIR=/etc/php7
COPY conf/fpm-pool.conf ${PHP_INI_DIR}/php-fpm.d/www.conf
COPY conf/php.ini ${PHP_INI_DIR}/conf.d/custom.ini

# 配置 Supervisor
COPY conf/supervisord7.conf /etc/supervisor/conf.d/supervisord.conf

# 确保非 root 用户（nobody）对所需目录和文件有访问权限
RUN chown -R nobody:nobody /var/www/html /run /var/lib/nginx /var/log/nginx

# 创建 /logs 目录并设置权限
RUN mkdir -p /www/logs  && chmod -R nobody:nobody /www/logs && chmod -R 775 /www/logs

# 切换到非 root 用户
USER nobody

# 复制应用代码
COPY --chown=nobody src/ /var/www/html/
COPY --chown=nobody errors/ /var/www/errors
#COPY  src/ /var/www/html/
#COPY  errors/ /var/www/errors

# 暴露 Nginx 监听的端口
EXPOSE 8080

# 使用 Supervisor 启动 Nginx 和 PHP-FPM
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

# 配置健康检查
HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:8080/fpm-ping || exit 1