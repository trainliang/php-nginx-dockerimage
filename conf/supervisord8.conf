[supervisord]
# 以前台模式运行 supervisord，适合在容器环境中使用
nodaemon=true
# 将 supervisord 自身的日志文件存储在 logs/supervisord.log
logfile=logs/supervisord.log
# 日志文件不限制大小
logfile_maxbytes=0
# supervisord 的 PID 文件路径
pidfile=/run/supervisord.pid
# 设置日志级别为 warn，仅记录警告及以上级别的信息，减少不必要的日志记录，提升性能
loglevel = warn
# 检查子进程状态的间隔时间，默认 5 秒，适当增大可减少 CPU 开销
identifier = supervisor
; 调整为 10 秒
check_interval = 10

[program:php-fpm]
# 启动 php-fpm84 并以前台模式运行
command=php-fpm84 -F
# 将 php-fpm 的标准输出日志存储在 logs/php-fpm_stdout.log
stdout_logfile=logs/php-fpm_stdout.log
# 标准输出日志文件不限制大小
stdout_logfile_maxbytes=0
# 将 php-fpm 的标准错误日志存储在 logs/php-fpm_stderr.log
stderr_logfile=logs/php-fpm_stderr.log
# 标准错误日志文件不限制大小
stderr_logfile_maxbytes=0
# 当程序异常退出时自动重启，提高服务可用性
autorestart=true
# 启动重试次数设为 3 次
startretries=3
# 程序启动后正常运行多少秒才认为启动成功，避免瞬间崩溃误判
startsecs = 5
; 进程停止时先发送 TERM 信号，等待 10 秒，若未停止再发 KILL 信号
stopsignal = TERM
stopwaitsecs = 10
; 设置进程优先级，确保按顺序启动
priority = 50

[program:nginx]
# 启动 nginx 并以前台模式运行
command=nginx -g 'daemon off;'
# 将 nginx 的标准输出日志存储在 logs/nginx_stdout.log
stdout_logfile=logs/nginx_stdout.log
# 标准输出日志文件不限制大小
stdout_logfile_maxbytes=0
# 将 nginx 的标准错误日志存储在 logs/nginx_stderr.log
stderr_logfile=logs/nginx_stderr.log
# 标准错误日志文件不限制大小
stderr_logfile_maxbytes=0
# 当程序异常退出时自动重启，提高服务可用性
autorestart=true
# 启动重试次数设为 3 次
startretries=3
# 程序启动后正常运行多少秒才认为启动成功，避免瞬间崩溃误判
startsecs = 5
; 进程停止时先发送 QUIT 信号，等待 10 秒，若未停止再发 KILL 信号
stopsignal = QUIT
stopwaitsecs = 10
; 设置进程优先级，确保在 php-fpm 之后启动
priority = 60