# 使用多阶段构建精简镜像
# 第一阶段：构建环境
FROM --platform=$TARGETPLATFORM php:7.4-fpm-alpine AS builder

# 安装构建依赖
RUN apk add --no-cache --virtual .build-deps \
    nginx \
    $PHPIZE_DEPS \
    libzip-dev \
    icu-dev \
    libpng-dev \
    libjpeg-turbo-dev \
    freetype-dev \
    oniguruma-dev

# 动态安装PHP扩展（示例配置）
COPY php-extensions-7.list /tmp/
RUN < /tmp/php-extensions-7.list xargs -n1 docker-php-ext-install \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install gd \
    && apk del .build-deps

# 第二阶段：生产镜像
FROM --platform=$TARGETPLATFORM php:7.4-fpm-alpine

# 安装运行时依赖和进程管理器
RUN apk add --no-cache \
    nginx \
    supervisor \
    && mkdir -p /run/nginx /run/php /var/log/supervisor

# 复制构建阶段的配置文件
COPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/
COPY --from=builder /usr/local/lib/php/extensions/ /usr/local/lib/php/extensions/

# 配置文件处理
COPY config/nginx.conf /etc/nginx/nginx.conf
COPY config/php-fpm.conf /usr/local/etc/php-fpm.d/www.conf
COPY config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# 设置容器卷映射
VOLUME ["/var/www/html", "/etc/nginx/conf.d", "/var/log/nginx", "/var/log/php"]

# 设置工作目录和暴露端口
WORKDIR /var/www/html
EXPOSE 80 443

# 启动进程管理器
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]